# bot.py
import cv2
import numpy as np
from deepface import DeepFace
from mtcnn import MTCNN
from aiogram import Bot, Dispatcher, types
from aiogram.types import InputFile
from aiogram.utils import executor
import os

# === –¢–í–û–ô Telegram API Token ===
API_TOKEN = '8088455823:AAHr-KuyhhiKAxgO9HDUzhoVtP2A9oyGYRw'

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# === –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ===
def analyze_image(image_path):
    detector = MTCNN()
    img = cv2.imread(image_path)
    rgb_img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

    detections = detector.detect_faces(rgb_img)

    for face in detections:
        x, y, w, h = face['box']
        x, y = max(0, x), max(0, y)
        face_img = rgb_img[y:y+h, x:x+w]

        try:
            analysis = DeepFace.analyze(face_img, actions=['age', 'emotion'], enforce_detection=False)
            age = analysis[0]['age']
            emotion = analysis[0]['dominant_emotion']
            label = f"{int(age)} –ª–µ—Ç, {emotion}"
        except Exception as e:
            label = "–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞"

        cv2.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 2)
        cv2.putText(img, label, (x, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 0, 255), 2)

    result_path = "result.jpg"
    cv2.imwrite(result_path, img)
    return result_path

# === –ö–æ–º–∞–Ω–¥–∞ /start ===
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.reply("üëã –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ, –∏ —è –ø–æ–∫–∞–∂—É –≤–æ–∑—Ä–∞—Å—Ç –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–æ –ª–∏—Ü—É.")

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ ===
@dp.message_handler(content_types=['photo'])
async def handle_photo(message: types.Message):
    await message.photo[-1].download(destination_file="input.jpg")
    await message.reply("üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")

    result_path = analyze_image("input.jpg")
    await message.reply_photo(InputFile(result_path))

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    executor.start_polling(dp, skip_updates=True)
